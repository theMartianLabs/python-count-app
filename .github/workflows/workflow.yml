name: CI - Build and Push to ECR (OIDC)

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build Docker image and push to ECR using OIDC
    runs-on: ubuntu-latest
    permissions:
      id-token: write       # Required for OIDC
      contents: read       # Required for checkout

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActions

    #   - name: Test AWS Access
    #     run: |
    #       aws sts get-caller-identity || { echo "Failed to authenticate with AWS"; exit 1; }

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_NAME }} #my-repo-name  # Replace with your ECR repository name
          IMAGE_TAG: ${{ github.run_number }}  # Use commit SHA as tag, or customize (e.g., 'latest')
        run: |
          # Build Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          # Push Docker image to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

 

# name: CI - Build and Push to ECR (OIDC)

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build-and-push:
#     name: Build Docker image and push to ECR using OIDC
#     runs-on: ubuntu-latest
#     permissions:
#       id-token: write       # Required for OIDC
#       contents: read

#     steps:
#       - name: Checkout source code
#         uses: actions/checkout@v4

#       - name: Configure AWS credentials using OIDC
#         uses: aws-actions/configure-aws-credentials@v3
#         with:
#           role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
#           aws-region: ${{ secrets.AWS_REGION }}
#           role-session-name: GitHubActions

#       - name: Test AWS Access
#         run: aws sts get-caller-identity

#       - name: Log in to Amazon ECR
#         uses: aws-actions/amazon-ecr-login@v2

    #   - name: Set up image tag
    #     run: echo "IMAGE_TAG=${{ secrets.IMAGE_TAG || 'latest' }}" >> $GITHUB_ENV

    #   - name: Build Docker image
    #     run: |
    #       docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .

    #   - name: Push Docker image to ECR
    #     run: |
    #       docker push ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
